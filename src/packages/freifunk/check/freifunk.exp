#------------------------------------------------------------------------------
# fli4l __FLI4LVER__ - configuration check for freifunk
#
# Last Update:  $Id$
#
# Copyright (c) 2008-2016 - fli4l-Team <team@fli4l.de>
#------------------------------------------------------------------------------

NETWMASK         = '(RE:IPADDR):(RE:IPADDR)'
                : 'no valid network specification, should be a network 
                  address followed by a netmask, for instance 192.168.6.0:255.255.255.0'

EYESNO        = '()|(RE:YESNO)'     : 'neither numeric (decimal) nor empty'

FRAGMENT        = '512'     : 'must be a fragmentation of 512 Bytes'

EFRAGMENT        = '()|(RE:FRAGMENT)'     : 'neither 512 nor empty'

DIJKSTRA 	= '(RE:NUMERIC) (RE:DOT_NUMERIC)'     : 'numeric (decimal) with space and followed by dot numeric'

EDIJKSTRA        = '()|(RE:DIJKSTRA)'     : 'neither numeric (decimal) with space and followed by dot numeric nor empty'

EMACADDR        = '()|(RE:MACADDR)'     : 'neither set a valid BSSID  nor empty (no fix BSSID)'

MULT_IPADDR	= 'default|(RE:IPADDR)'     : 'neither default or a valid IP address'

PHONE_NUMERIC    = '[0-9]*'          : 'neither 00493012345 without spaces or 03012345'      

EPHONE_NUMERIC   = '()|(RE:PHONE_NUMERIC)'   : 'neither 00493012345 or 03012345  without spaces or empty'

MAP_UPDATE       = 'minute|hourly|daily|monthly'      : 'neither minute or hourly or daily or monthly'

URLTARGET = '_blank|_self|_parent|_top'       : 'neither _blank or _self or _parent or _top'

EURLTARGET = '()|(RE:URLTARGET)'              : 'neither _blank or _self or _parent or _top or empty'

FREIFUNK_IP   = '(RE:IPADDR)' : 'use either an ip address or a reference to one of the IP_NET_x-Variables (i.e. IP_NET_1_IPADDR)'

FREIFUNK_LINKORDER = '[5-9][0-9]'   : 'range between 50 and 99'

FF_REDISTRIBUTE = 'system|kernel|connect|static|rip|ripng|ospf|ospf6|isis|bgp|hsls' : 'neither system or kernel or connect or static or rip or ripng or ospf or ospf6 or isis or bgp or hsls' 

FF_ROUTES = 'only|both' : 'either only or both' 

FF_TRUE_FALSE = 'true|false' : 'either true or false'

OLSR_SOURCE = 'olsr' : 'Only olsr is possible'

+RRDTOOL_SOURCE = '(RE:OLSR_SOURCE)' : 'Only olsr is possible'
