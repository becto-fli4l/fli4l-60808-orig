diff -purN lcd4linux-1191.orig/plugin_i2c_sensors.c lcd4linux-1191/plugin_i2c_sensors.c
--- lcd4linux-1191.orig/plugin_i2c_sensors.c	2011-07-27 04:53:04.000000000 +0200
+++ lcd4linux-1191/plugin_i2c_sensors.c	2016-09-06 21:26:59.577362435 +0200
@@ -100,15 +100,17 @@ static int parse_i2c_sensors_sysfs(const
 {
     char val[32];
     char buffer[32];
-    char file[64];
+    char *file;
     FILE *stream;
 
+    file = (char *) malloc(strlen(path) + strlen(key) + 1);
     strcpy(file, path);
     strcat(file, key);
 
     stream = fopen(file, "r");
     if (stream == NULL) {
 	error("i2c_sensors: fopen(%s) failed: %s", file, strerror(errno));
+	free(file);
 	return -1;
     }
     fgets(buffer, sizeof(buffer), stream);
@@ -116,6 +118,7 @@ static int parse_i2c_sensors_sysfs(const
 
     if (buffer[0] == '\0') {
 	error("i2c_sensors: %s empty ?!", file);
+	free(file);
 	return -1;
     }
 
@@ -132,6 +135,7 @@ static int parse_i2c_sensors_sysfs(const
 
     hash_put(&I2Csensors, key, val);
 
+    free(file);
     return 0;
 
 }
@@ -142,7 +146,7 @@ static int parse_i2c_sensors_sysfs(const
 
 static int parse_i2c_sensors_procfs(const char *key)
 {
-    char file[64];
+    char *file;
     FILE *stream;
     char buffer[32];
 
@@ -154,6 +158,7 @@ static int parse_i2c_sensors_procfs(cons
     const char *number = &key[strlen(key) - 1];
     int tokens_index;
     /* debug("%s  ->  %s", key, number); */
+    file = (char *) malloc(strlen(path) + strlen(number) + 16 + 1);
     strcpy(file, path);
 
     if (!strncmp(key, "temp_", 5)) {
@@ -173,12 +178,14 @@ static int parse_i2c_sensors_procfs(cons
 	strcat(file, "fan");
 	strcat(file, number);
     } else {
+	free(file);
 	return -1;
     }
 
     stream = fopen(file, "r");
     if (stream == NULL) {
 	error("i2c_sensors: fopen(%s) failed: %s", file, strerror(errno));
+	free(file);
 	return -1;
     }
     fgets(buffer, sizeof(buffer), stream);
@@ -186,6 +193,7 @@ static int parse_i2c_sensors_procfs(cons
 
     if (buffer[0] == '\0') {
 	error("i2c_sensors: %s empty ?!", file);
+	free(file);
 	return -1;
     }
 
@@ -204,6 +212,7 @@ static int parse_i2c_sensors_procfs(cons
 	}
     }
     free(running);
+    free(file);
     return 0;
 }
 
@@ -217,7 +226,7 @@ static void my_i2c_sensors_path(const ch
     struct dirent *dir;
     struct dirent *file;
     const char *base;
-    char dname[64];
+    char *dname;
     DIR *fd1;
     DIR *fd2;
     int done;
@@ -246,6 +255,7 @@ static void my_i2c_sensors_path(const ch
 	}
 
 	/* dname is the absolute path */
+	dname = (char *) malloc(strlen(base) + strlen(dir->d_name) + 1 + 1);
 	strcpy(dname, base);
 	strcat(dname, dir->d_name);
 	strcat(dname, "/");
@@ -265,7 +275,7 @@ static void my_i2c_sensors_path(const ch
 		char fname[PATH_MAX];
 		snprintf(fname, PATH_MAX, "%sdevice/temp1_input", dname);
 		if (access(fname, R_OK) == 0) {
-		    path = realloc(path, strlen(dname) + 7);
+		    path = realloc(path, strlen(dname) + 7 + 1);
 		    sprintf(path, "%sdevice/", dname);
 		    done = 1;
 		    break;
@@ -273,6 +283,7 @@ static void my_i2c_sensors_path(const ch
 	    }
 	}
 	closedir(fd2);
+	free(dname);
 	if (done)
 	    break;
     }
