diff -purN km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/driver.c km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/driver.c
--- km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/driver.c	2019-03-13 19:12:28.626244012 +0100
+++ km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/driver.c	2019-03-16 09:45:02.219925582 +0100
@@ -21,13 +21,18 @@
  */
 
 #include <asm/atomic.h>
+#include <linux/version.h>
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(4,14,0))
 #include <asm/uaccess.h>
+#else
+#include <linux/uaccess.h>
+#endif
 #include <linux/spinlock.h>
 #include <linux/usb.h>
 #include <linux/wait.h>
-#include <linux/version.h>
 #include <linux/interrupt.h>
 #include <linux/kernel.h>
+#include <linux/kthread.h>
 #include <linux/skbuff.h>
 #include <linux/sched.h>
 #include <linux/ctype.h>
@@ -37,6 +42,9 @@
 #include <linux/isdn/capicmd.h>
 #include <linux/isdn/capiutil.h>
 #include <linux/isdn/capilli.h>
+#include <linux/seq_file.h>
+#include <linux/proc_fs.h>
+#include <linux/export.h>
 #include <stdarg.h>
 #include "libdefs.h"
 #include "tables.h"
@@ -84,7 +92,7 @@ static atomic_t			thread_capi_flag;
 static volatile unsigned long	stack_lock		= 0;
 static volatile unsigned long	resetting_ctrl		= 0;
 static struct work_struct	closing_work;
-static void			closing_worker (void *);
+static void			closing_worker (struct work_struct *);
 static volatile unsigned long	closing_worker_running	= 0;
 static void		     (* close_func) (void *)	= NULL;
 static void *			close_data		= NULL;
@@ -108,9 +116,14 @@ static DECLARE_TASKLET(tx_tasklet, tx_ta
 static DECLARE_TASKLET(rx_tasklet, rx_task, 0);
 static DECLARE_WAIT_QUEUE_HEAD(wait);
 static DECLARE_WAIT_QUEUE_HEAD(capi_wait);
+static DECLARE_COMPLETION(hotplug); /* New DECLARE, <arnd.feldmueller@web.de> */
+static DECLARE_COMPLETION(config);  /* New DECLARE, <arnd.feldmueller@web.de> */
+static DECLARE_COMPLETION(notify);  /* New DECLARE, <arnd.feldmueller@web.de> */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24))
 static DECLARE_MUTEX_LOCKED(hotplug);
 static DECLARE_MUTEX_LOCKED(config);
 static DECLARE_MUTEX_LOCKED(notify);
+#endif
 
 #define SCHED_WAKEUP_CAPI       { atomic_set (&thread_capi_flag, 1); wake_up_interruptible (&capi_wait); }
 #define SCHED_WAKEUP            { atomic_set (&got_kicked, 1); wake_up_interruptible (&wait); }
@@ -181,14 +194,14 @@ static void init_ctrl (void) {
 
 /*---------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
+/*
 static void pprintf (char * page, int * len, const char * fmt, ...) {
 	va_list args;
 
 	va_start (args, fmt);
 	*len += vsnprintf (page + *len, PPRINTF_LEN, fmt, args);
 	va_end (args);
-} /* pprintf */
-
+} */ /* pprintf */
 /*---------------------------------------------------------------------------*\
 \*-F-------------------------------------------------------------------------*/
 static int emit (card_p ctx, char * ptr, int len, int * olen) {
@@ -214,10 +227,9 @@ static int emit (card_p ctx, char * ptr,
 
 /*---------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
-static void select_completion (struct urb * purb, struct pt_regs * ptr) {
+static void select_completion (struct urb * purb) {
 	struct usb_ctrlrequest	* req;
 
-	UNUSED_ARG (ptr);
 	assert (NULL != purb);
 	req = (struct usb_ctrlrequest *) purb->context;
 	LOG(
@@ -283,10 +295,9 @@ int select_config (
 
 /*---------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
-static void reset_completion (struct urb * purb, struct pt_regs * ptr) {
+static void reset_completion (struct urb * purb) {
 	struct usb_ctrlrequest *	req;
 
-	UNUSED_ARG (ptr);
 	assert (NULL != purb);
 	info (purb->status == 0);
 
@@ -384,7 +395,7 @@ static int __kcapi load_ware (struct cap
 	
 	ERROR("Firmware does not respond.\n");
 	assert (ctx->ctr != NULL);
-	capi_ctr_reseted (ctx->ctr);
+	capi_ctr_down (ctx->ctr);
 	return -EBUSY;
 } /* load_ware */
 
@@ -419,7 +430,12 @@ static void __kcapi reset_ctrl (struct c
 
 /*---------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
-static char * __kcapi proc_info (struct capi_ctr * ctrl) {
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(4,18,0))
+static char * __kcapi proc_info (struct capi_ctr * ctrl)
+#else
+static char * __kcapi proc_show (struct capi_ctr * ctrl)  
+#endif
+{
 	card_p		card;
 	per_ctrl_p	pcp;
 	static char	text[80];
@@ -441,35 +457,39 @@ static char * __kcapi proc_info (struct
 
 /*---------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
-static int __kcapi ctr_info (
-	char *			page, 
-	char **			start, 
-	off_t			ofs,
-	int			count, 
-	int *			eof, 
-	struct capi_ctr *	ctrl
-) {
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(4,18,0))
+static int __kcapi ctr_info (struct seq_file *m, void *v)
+#else
+int __kcapi ctr_proc_show (struct seq_file *m, void *v)
+#endif
+{
+	struct capi_ctr *ctrl = m->private;
 	card_p			card;
 	per_ctrl_p		pcp;
 	char *			temp;
 	unsigned char		flag;
-	int			len = 0;
 
 	assert (ctrl != NULL);
 	assert (ctrl->driverdata != NULL);
 	card = GET_CARD (ctrl);
 	pcp = GET_CTRL (ctrl);
-	pprintf (page, &len, "%-16s %s\n", "name", SHORT_LOGO);
-	pprintf (page, &len, "%-16s %d\n", "dev", card->dev->devnum);
+//	pprintf (page, &len, "%-16s %s\n", "name", SHORT_LOGO);
+	seq_printf(m, "%-16s %s\n", "name", SHORT_LOGO);
+//	pprintf (page, &len, "%-16s %d\n", "dev", card->dev->devnum);
+	seq_printf(m, "%-16s %d\n", "dev", card->dev->devnum);
 	temp = pcp->version ? pcp->string[1] : "A1";
-	pprintf (page, &len, "%-16s %s\n", "type", temp);
+//	pprintf (page, &len, "%-16s %s\n", "type", temp);
+	seq_printf(m, "%-16s %s\n", "type", temp);
 	temp = pcp->version ? pcp->string[0] : "-";
-	pprintf (page, &len, "%-16s %s\n", "ver_driver", temp);
-	pprintf (page, &len, "%-16s %s\n", "ver_cardtype", SHORT_LOGO);
+//	pprintf (page, &len, "%-16s %s\n", "ver_driver", temp);
+	seq_printf(m, "%-16s %s\n", "ver_driver", temp);
+//	pprintf (page, &len, "%-16s %s\n", "ver_cardtype", SHORT_LOGO);
+	seq_printf(m, "%-16s %s\n", "ver_cardtype", SHORT_LOGO);
 
 	flag = ((unsigned char *) (ctrl->profile.manu))[3];
 	if (flag) {
-		pprintf (page, &len, "%-16s%s%s%s%s%s%s%s\n", "protocol",
+//		pprintf (page, &len, "%-16s%s%s%s%s%s%s%s\n", "protocol",
+		seq_printf(m, "%-16s%s%s%s%s%s%s%s\n", "protocol",
 			(flag & 0x01) ? " DSS1" : "",
 			(flag & 0x02) ? " CT1" : "",
 			(flag & 0x04) ? " VN3" : "",
@@ -481,21 +501,42 @@ static int __kcapi ctr_info (
 	}
 	flag = ((unsigned char *) (ctrl->profile.manu))[5];
 	if (flag) {
-		pprintf (page, &len, "%-16s%s%s%s%s\n", "linetype",
+//		pprintf (page, &len, "%-16s%s%s%s%s\n", "linetype",
+                seq_printf(m, "%-16s%s%s%s%s\n", "linetype",
 			(flag & 0x01) ? " point to point" : "",
 			(flag & 0x02) ? " point to multipoint" : "",
 			(flag & 0x08) ? " leased line without D-channel" : "",
 			(flag & 0x04) ? " leased line with D-channel" : ""
 		);
 	}
+/*
 	if (len < ofs) {
 		return 0;
 	}
 	*eof = 1;
 	*start = page - ofs;
 	return ((count < len - ofs) ? count : len - ofs);
+*/
+        return 0;
 } /* ctr_info */
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(4,18,0))
+static int ctr_proc_open(struct inode *inode, struct file *file)
+{
+       return single_open(file, ctr_info, PDE_DATA(inode));
+}
+
+const struct file_operations ctr_proc_fops = {
+       .owner          = THIS_MODULE,
+       .open           = ctr_proc_open,
+       .read           = seq_read,
+       .llseek         = seq_lseek,
+       .release        = single_release,
+};
+#else
+	EXPORT_SYMBOL(ctr_proc_show);
+#endif
+
 /*---------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
 static int setup_ctrl (card_p cp, int ix) {
@@ -514,8 +555,13 @@ static int setup_ctrl (card_p cp, int ix
 	cptr->register_appl	= register_appl;
 	cptr->release_appl	= release_appl;
 	cptr->send_message	= send_msg;
+//	cptr->ctr_read_proc	= ctr_info;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(4,18,0))
 	cptr->procinfo		= proc_info;
-	cptr->ctr_read_proc	= ctr_info;
+	cptr->proc_fops     = &ctr_proc_fops;
+#else
+	cptr->proc_show     = ctr_proc_show;
+#endif
 	snprintf (cptr->name, 32, "%s-%04x", TARGET, cp->dev->devnum);
 
 	if (0 != (res = attach_capi_ctr (cptr))) {
@@ -702,8 +748,8 @@ static int remove_appls (card_p card) {
 
 /*-C-------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
-static void closing_worker (void * ctx) {
-	card_p	card = (card_p) ctx;
+static void closing_worker (struct work_struct *work) {
+	card_p	card = capi_card;
 
 	DECLARE_WAIT_QUEUE_HEAD(close_wait);
 
@@ -790,7 +836,7 @@ void start_closing_worker (void (* func)
 	close_func = func;
 	close_data = data;
 
-	INIT_WORK (&closing_work, closing_worker, capi_card);
+	INIT_WORK (&closing_work, (work_func_t)closing_worker);
 	schedule_work (&closing_work);
 	LOG("Worker scheduled.\n");
 } /* start_closing_worker */
@@ -1118,9 +1164,8 @@ static void issue_hard_error (card_p pdc
 
 /*---------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
-static void usb_write_completion (struct urb * purb, struct pt_regs * ptr) {
+static void usb_write_completion (struct urb * purb) {
 
-	UNUSED_ARG (ptr);
 	assert (purb != NULL);
 	enlist_urb (capi_card->tx_pool, purb);
 	atomic_inc (&tx_flag);
@@ -1129,9 +1174,8 @@ static void usb_write_completion (struct
 
 /*---------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
-static void usb_read_completion (struct urb * purb, struct pt_regs * ptr) {
+static void usb_read_completion (struct urb * purb) {
 
-	UNUSED_ARG (ptr);
 	assert (purb != NULL);
 	atomic_dec (&capi_card->rx_pending);
 	enlist_urb (capi_card->rx_pool, purb);
@@ -1315,7 +1359,6 @@ static __attr void scheduler_control (un
 static int scheduler (void * arg) {
 
 	UNUSED_ARG (arg);
-	daemonize (TARGET);
 	snprintf (current->comm, 16, "%s_s", TARGET);
 	LOG("Starting scheduler thread '%s'...\n", current->comm);
 	while (atomic_read (&thread_flag)) {
@@ -1358,7 +1401,10 @@ static int scheduler (void * arg) {
 		}
 	}
 	LOG("Scheduler thread stopped.\n");
+	complete(&hotplug); /* Complete Thread Sync here <arnd.feldmueller@web.de> */
+	#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24))
 	up (&hotplug);
+	#endif
 	return 0;
 } /* scheduler */
 
@@ -1373,7 +1419,7 @@ void kick_scheduler (void) {
 /*---------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
 int make_thread (void) {
-
+	struct task_struct *ts;
 	if (-1 != thread_pid) {
 		LOG("Thread[%d] is running.\n", thread_pid);
 		return thread_pid;
@@ -1381,8 +1427,14 @@ int make_thread (void) {
 	atomic_set (&thread_flag, 1);
 	atomic_set (&thread_capi_flag, 0);
 	init_waitqueue_head (&capi_wait);
-	thread_pid = kernel_thread (scheduler, NULL, 0);
-	LOG("Thread[%d] started.\n", thread_pid);
+	ts = kthread_run (scheduler, NULL, SHORT_LOGO "-sched");
+	if (IS_ERR(ts)) {
+		LOG("Thread not started: error %ld\n", PTR_ERR(ts));
+	}
+	else {
+		thread_pid = ts->pid;
+		LOG("Thread[%d] started.\n", thread_pid);
+	}
 	return thread_pid;
 } /* make_thread */
 
@@ -1392,7 +1444,8 @@ void kill_thread (void) {
 
 	if (thread_pid != -1) {
 		atomic_set (&thread_flag, 0);
-		if (NULL == find_task_by_pid (thread_pid)) {
+//		if (NULL == find_task_by_pid (thread_pid)) {
+		if (NULL == find_pid_ns(thread_pid, PIDTYPE_PID)) {
 			LOG("Thread[%d] has died before!\n", thread_pid);
 		} else {
 			if (!atomic_read (&thread_capi_flag)) {
@@ -1401,7 +1454,10 @@ void kill_thread (void) {
 				SCHED_WAKEUP;
 			}
 			LOG("Scheduler thread signalled, waiting...\n");
+			wait_for_completion(&hotplug); /* Wait for complete Thread Sync <arnd.feldmueller@web.de> */
+			#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24))
 			down (&hotplug);
+			#endif
 			LOG("Scheduler thread[%d] terminated.\n", thread_pid);
 		}
 		thread_pid = -1;
diff -purN km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/driver.h km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/driver.h
--- km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/driver.h	2019-03-13 19:12:28.626244012 +0100
+++ km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/driver.h	2019-03-16 09:45:02.219925582 +0100
@@ -23,9 +23,8 @@
 #ifndef __have_driver_h__
 #define __have_driver_h__
 
-#include <asm/semaphore.h>
 #include <asm/atomic.h>
-#include <linux/config.h>
+#include <linux/semaphore.h>
 #include <linux/skbuff.h>
 #include <linux/capi.h>
 #include <linux/isdn/capilli.h>
diff -purN km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/fcusb.mod.c km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/fcusb.mod.c
--- km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/fcusb.mod.c	1970-01-01 01:00:00.000000000 +0100
+++ km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/fcusb.mod.c	2019-03-16 09:45:02.219925582 +0100
@@ -0,0 +1,21 @@
+#include <linux/module.h>
+#include <linux/vermagic.h>
+#include <linux/compiler.h>
+
+MODULE_INFO(vermagic, VERMAGIC_STRING);
+
+struct module __this_module
+__attribute__((section(".gnu.linkonce.this_module"))) = {
+ .name = KBUILD_MODNAME,
+ .init = init_module,
+#ifdef CONFIG_MODULE_UNLOAD
+ .exit = cleanup_module,
+#endif
+ .arch = MODULE_ARCH_INIT,
+};
+
+static const char __module_depends[]
+__used
+__attribute__((section(".modinfo"))) =
+"depends=kernelcapi,usbcore";
+
diff -purN km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/lib.c km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/lib.c
--- km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/lib.c	2019-03-13 19:12:28.626244012 +0100
+++ km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/lib.c	2019-03-16 09:47:08.435923130 +0100
@@ -529,10 +529,10 @@ void __attr os_timer_poll (void) {
 /*---------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
 #if defined (DRIVER_TYPE_DSL)
-static __attr int os_gettimeofday (struct timeval * tv) {
+static __attr int os_gettimeofday (ktime_t * tv) {
 
 	if (NULL != tv) {
-		do_gettimeofday (tv);
+		tv = ktime_get();
 	}
 	return 0;
 } /* os_gettimeofday */
diff -purN km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/libdefs.h km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/libdefs.h
--- km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/libdefs.h	2019-03-13 19:12:28.626244012 +0100
+++ km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/libdefs.h	2019-03-16 09:47:56.631922193 +0100
@@ -105,7 +105,7 @@ typedef struct __lib {
 	int (__attr * timer_stop) (unsigned);
 	void (__attr * timer_poll) (void);
 #if defined (DRIVER_TYPE_DSL)
-	int (__attr * get_time) (struct timeval *);
+	int (__attr * get_time) (ktime_t *);
 #endif
 
 #if defined (DRIVER_TYPE_DSL_TM) || defined (DRIVER_TYPE_DSL_USB)
diff -purN km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/main.c km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/main.c
--- km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/main.c	2019-03-13 19:12:28.626244012 +0100
+++ km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/main.c	2019-03-16 09:45:02.219925582 +0100
@@ -76,14 +76,7 @@ static struct usb_device_id usb_id_table
 } ;
 
 static struct usb_driver usb_driver = {
-#ifndef OLD_USB_DRIVER
-	.driver = {
-#endif
-		.owner =	THIS_MODULE,
-		.name =		TARGET,
-#ifndef OLD_USB_DRIVER
-	},
-#endif
+	.name =		TARGET,
 	.id_table =	usb_id_table,
 	.probe =	usb_probe,
 	.disconnect =	usb_disconnect,
@@ -207,11 +200,15 @@ static int usb_probe (
 		goto exit_norxurbsinit;
 	}
 	init_closing_worker ();
-	make_thread ();
+	if (make_thread () == -1) {
+		ERROR("Could not start scheduler thread.\n");
+	exit_nothread:
+		goto exit_nolib;
+	}
 	if (0 != add_card (dev)) {
 		kill_thread ();
 		free_library ();
-		goto exit_nolib;
+		goto exit_nothread;
 	}
 	usb_set_intfdata (iface, pdc);
 	return 0;
@@ -250,7 +247,6 @@ static int __init usb_init (void) {
 		lib_strcpy (REVISION, DRIVER_REV);
 	}
         NOTE("%s, revision %s\n", DRIVER_LOGO, REVISION);
-	NOTE("(%s built on %s at %s)\n", TARGET, __DATE__, __TIME__);
 
 #ifdef __LP64__
 	NOTE("-- 64 bit CAPI driver --\n");
diff -purN km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/Makefile km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/Makefile
--- km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/Makefile	2019-03-13 19:12:28.626244012 +0100
+++ km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/Makefile	2019-03-16 09:45:02.219925582 +0100
@@ -47,5 +47,5 @@ endif
 
 
 install:
-		$(MAKE) -C $(KDIR) modules_add SUBDIRS=$(CURDIR)
+		$(MAKE) -C $(KDIR) modules_install SUBDIRS=$(CURDIR)
 
diff -purN km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/tools.c km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/tools.c
--- km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/tools.c	2019-03-13 19:12:28.630243962 +0100
+++ km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/tools.c	2019-03-16 09:48:14.439921847 +0100
@@ -37,6 +37,7 @@ struct __lock {
 
 	unsigned long		flags;
 	spinlock_t		lock;
+//static DEFINE_SPINLOCK(lock);
 } ; 
 
 /*---------------------------------------------------------------------------*\
@@ -110,10 +111,11 @@ static unsigned		lib_heap_size	= 0;
 #define	FENCE2_OK(h,m)	(*(unsigned *)(((char *) m)+(h)->size)==FENCE_TAG)
 
 static unsigned		alloc_count	= 0;
-static spinlock_t	track_lock	= SPIN_LOCK_UNLOCKED;
+//static spinlock_t	track_lock	= SPIN_LOCK_UNLOCKED;
+static DEFINE_SPINLOCK(track_lock);
 
 #if !defined (NDEBUG) && defined (LOG_TIMER)
-static struct timeval	zero_time;
+static ktime_t	zero_time;
 #endif
 #endif
 
@@ -394,8 +396,8 @@ void setup_timer (dbg_timer * t, long ds
 \*---------------------------------------------------------------------------*/
 int check_timer (dbg_timer * t) {
 	int		res = 1;
-	struct timeval	now;
-	struct timeval	delta;
+	ktime_t	now;
+	ktime_t	delta;
 	
 	assert (t != NULL);
 	do_gettimeofday (&now);
@@ -418,10 +420,10 @@ int check_timer (dbg_timer * t) {
 
 /*---------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
-int check_timer_cb (dbg_timer * t, void (* callback) (dbg_timer *, struct timeval *)) {
+int check_timer_cb (dbg_timer * t, void (* callback) (dbg_timer *, ktime_t *)) {
 	int		res = 1;
-	struct timeval	now;
-	struct timeval	delta;
+	ktime_t	now;
+	ktime_t	delta;
 	
 	assert (t != NULL);
 	do_gettimeofday (&now);
@@ -442,7 +444,7 @@ int check_timer_cb (dbg_timer * t, void
 /*---------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
 void touch_timer (dbg_timer * t) {
-	struct timeval	temp, delta;
+	ktime_t	temp, delta;
 	
 	assert (t != NULL);
 	do_gettimeofday (&temp);
@@ -453,7 +455,7 @@ void touch_timer (dbg_timer * t) {
 /*---------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
 void start_watch (dbg_timer * w) {
-	struct timeval	temp, delta;
+	ktime_t	temp, delta;
 	
 	assert (w != NULL);
 	do_gettimeofday (&temp);
@@ -464,7 +466,7 @@ void start_watch (dbg_timer * w) {
 /*---------------------------------------------------------------------------*\
 \*---------------------------------------------------------------------------*/
 void stop_watch (dbg_timer * w) {
-	struct timeval	temp, delta;
+	ktime_t	temp, delta;
 	
 	assert (w != NULL);
 	do_gettimeofday (&temp);
@@ -529,7 +531,8 @@ int lock_init (lock_t * plock) {
 		ERROR("Could not allocate lock structure!!!\n");
 		return 0;
 	}
-	tmp->lock = SPIN_LOCK_UNLOCKED;
+//	tmp->lock = SPIN_LOCK_UNLOCKED;
+        spin_lock_init(&tmp->lock);
 	*plock = tmp;
 	return 1;
 } /* lock_init */
diff -purN km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/tools.h km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/tools.h
--- km_fcdsl-2.6-37.x86_64/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/tools.h	2019-03-13 19:12:28.630243962 +0100
+++ km_fcdsl-2.6-37.x86_64-fli4l-dslusb/usr/src/kernel-modules/fcdsl/src/src.fcdslusb1/tools.h	2019-03-16 09:48:12.479921886 +0100
@@ -135,8 +135,8 @@ extern void memdump (const void *, unsig
 typedef struct {
 
 	const char *	name;
-	struct timeval	t;
-	struct timeval	d;
+	ktime_t	t;
+	ktime_t	d;
 } dbg_timer;
 
 #define	PRINT_TIMER(x)		log ( \
@@ -163,7 +163,7 @@ extern void timers_stop (void);
 \*---------------------------------------------------------------------------*/
 extern void setup_timer (dbg_timer *, long, long);
 extern int check_timer (dbg_timer *);
-extern int check_timer_cb (dbg_timer *, void (*) (dbg_timer *, struct timeval *));
+extern int check_timer_cb (dbg_timer *, void (*) (dbg_timer *, ktime_t *));
 extern void touch_timer (dbg_timer *);
 
 extern void start_watch (dbg_timer *);
