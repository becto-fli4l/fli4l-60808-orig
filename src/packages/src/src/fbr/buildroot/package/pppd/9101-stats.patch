diff -purN pppd-2.4.7.orig/pppd/sys-linux.c pppd-2.4.7/pppd/sys-linux.c
--- pppd-2.4.7.orig/pppd/sys-linux.c	2018-01-30 23:14:51.777756114 +0100
+++ pppd-2.4.7/pppd/sys-linux.c	2018-01-30 23:18:34.107258948 +0100
@@ -1393,20 +1393,22 @@ get_ppp_stats(u, stats)
     int u;
     struct pppd_stats *stats;
 {
-    struct ifpppstatsreq req;
+    struct ifreq req;
+    struct ppp_stats rstats;
 
     memset (&req, 0, sizeof (req));
+    memset (&rstats, 0, sizeof (rstats));
 
-    req.stats_ptr = (caddr_t) &req.stats;
-    strlcpy(req.ifr__name, ifname, sizeof(req.ifr__name));
+    req.ifr_data = (caddr_t) &rstats;
+    strlcpy(req.ifr_name, ifname, sizeof(req.ifr_name));
     if (ioctl(sock_fd, SIOCGPPPSTATS, &req) < 0) {
-	error("Couldn't get PPP statistics: %m");
+	error("Couldn't get PPP statistics for %s: %m", ifname);
 	return 0;
     }
-    stats->bytes_in = req.stats.p.ppp_ibytes;
-    stats->bytes_out = req.stats.p.ppp_obytes;
-    stats->pkts_in = req.stats.p.ppp_ipackets;
-    stats->pkts_out = req.stats.p.ppp_opackets;
+    stats->bytes_in = rstats.p.ppp_ibytes;
+    stats->bytes_out = rstats.p.ppp_obytes;
+    stats->pkts_in = rstats.p.ppp_ipackets;
+    stats->pkts_out = rstats.p.ppp_opackets;
     return 1;
 }
 
diff -purN pppd-2.4.7.orig/pppstats/pppstats.c pppd-2.4.7/pppstats/pppstats.c
--- pppd-2.4.7.orig/pppstats/pppstats.c	2018-01-30 23:14:51.777756114 +0100
+++ pppd-2.4.7/pppstats/pppstats.c	2018-01-30 23:18:34.107258948 +0100
@@ -139,15 +139,13 @@ static void
 get_ppp_stats(curp)
     struct ppp_stats *curp;
 {
-    struct ifpppstatsreq req;
+    struct ifreq req;
+    struct ppp_stats rstats; 
 
     memset (&req, 0, sizeof (req));
+    memset (&rstats, 0, sizeof (rstats));
 
-#ifdef __linux__
-    req.stats_ptr = (caddr_t) &req.stats;
-#undef ifr_name
-#define ifr_name ifr__name
-#endif
+    req.ifr_data = (caddr_t) &rstats;
 
     strncpy(req.ifr_name, interface, sizeof(req.ifr_name));
     if (ioctl(s, SIOCGPPPSTATS, &req) < 0) {
@@ -158,22 +156,20 @@ get_ppp_stats(curp)
 	    perror("couldn't get PPP statistics");
 	exit(1);
     }
-    *curp = req.stats;
+    *curp = rstats;
 }
 
 static void
 get_ppp_cstats(csp)
     struct ppp_comp_stats *csp;
 {
-    struct ifpppcstatsreq creq;
+    struct ifreq creq;
+    struct ppp_comp_stats rstats;
 
     memset (&creq, 0, sizeof (creq));
+    memset (&rstats, 0, sizeof (rstats));
 
-#ifdef __linux__
-    creq.stats_ptr = (caddr_t) &creq.stats;
-#undef  ifr_name
-#define ifr_name ifr__name
-#endif
+    creq.ifr_data = (caddr_t) &rstats;
 
     strncpy(creq.ifr_name, interface, sizeof(creq.ifr_name));
     if (ioctl(s, SIOCGPPPCSTATS, &creq) < 0) {
@@ -190,28 +186,28 @@ get_ppp_cstats(csp)
     }
 
 #ifdef __linux__
-    if (creq.stats.c.bytes_out == 0) {
-	creq.stats.c.bytes_out = creq.stats.c.comp_bytes + creq.stats.c.inc_bytes;
-	creq.stats.c.in_count = creq.stats.c.unc_bytes;
+    if (rstats.c.bytes_out == 0) {
+	rstats.c.bytes_out = rstats.c.comp_bytes + rstats.c.inc_bytes;
+	rstats.c.in_count = rstats.c.unc_bytes;
     }
-    if (creq.stats.c.bytes_out == 0)
-	creq.stats.c.ratio = 0.0;
+    if (rstats.c.bytes_out == 0)
+	rstats.c.ratio = 0.0;
     else
-	creq.stats.c.ratio = 256.0 * creq.stats.c.in_count /
-			     creq.stats.c.bytes_out;
+	rstats.c.ratio = 256.0 * rstats.c.in_count /
+			     rstats.c.bytes_out;
 
-    if (creq.stats.d.bytes_out == 0) {
-	creq.stats.d.bytes_out = creq.stats.d.comp_bytes + creq.stats.d.inc_bytes;
-	creq.stats.d.in_count = creq.stats.d.unc_bytes;
+    if (rstats.d.bytes_out == 0) {
+	rstats.d.bytes_out = rstats.d.comp_bytes + rstats.d.inc_bytes;
+	rstats.d.in_count = rstats.d.unc_bytes;
     }
-    if (creq.stats.d.bytes_out == 0)
-	creq.stats.d.ratio = 0.0;
+    if (rstats.d.bytes_out == 0)
+	rstats.d.ratio = 0.0;
     else
-	creq.stats.d.ratio = 256.0 * creq.stats.d.in_count /
-			     creq.stats.d.bytes_out;
+	rstats.d.ratio = 256.0 * rstats.d.in_count /
+			     rstats.d.bytes_out;
 #endif
 
-    *csp = creq.stats;
+    *csp = rstats;
 }
 
 #else	/* STREAMS */
