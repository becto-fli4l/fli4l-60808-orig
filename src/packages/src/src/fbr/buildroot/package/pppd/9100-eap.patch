diff -purN ppp-2.4.6.orig/pppd/eap.c ppp-2.4.6/pppd/eap.c
--- ppp-2.4.6.orig/pppd/eap.c	2014-01-02 05:42:08.000000000 +0100
+++ ppp-2.4.6/pppd/eap.c	2015-01-14 00:12:18.604508511 +0100
@@ -1882,8 +1882,15 @@ int len;
 			break;
 		}
 		esp->es_server.ea_type = EAPT_MD5CHAP;
-		eap_send_success(esp);
+		/*
+		 * eap_send_success() can call network_phase() which can call
+		 * lcp_close() due to callback negotiation; this will reset
+		 * ea_state to eapInitial, which causes eap_figure_next_state()
+		 * to choose eapBadAuth for the next state. So first decide
+		 * which is the next state and then call eap_send_success().
+		 */
 		eap_figure_next_state(esp, 0);
+		eap_send_success(esp);
 		if (esp->es_rechallenge != 0)
 			TIMEOUT(eap_rechallenge, esp, esp->es_rechallenge);
 		break;
@@ -1948,8 +1955,13 @@ int len;
 				break;
 			}
 			esp->es_server.ea_type = EAPT_SRP;
-			eap_send_success(esp);
+			/*
+			 * see the EAPT_MD5CHAP case why the calls to
+			 * eap_figure_next_state() and eap_send_success() are
+			 * reversed
+			 */
 			eap_figure_next_state(esp, 0);
+			eap_send_success(esp);
 			if (esp->es_rechallenge != 0)
 				TIMEOUT(eap_rechallenge, esp,
 				    esp->es_rechallenge);
