From: Joerg Schambacher <joerg@i2audio.com>
Date: Wed, 24 Feb 2021 17:34:05 +0100
Subject: Hifiberry-DAC+:Avoids loading of headphone controls if not defined in
 DT-overlay

This fix keeps the driver from loading the headphone controls in case they are
not defined in the selected device tree overlay. This avoids problems if a
device uses the same I2C bus address as the headphone amp. The driver issues a
warning in that case.

Adds the missing embedded newlines in some printk/info statements.

Signed-off-by: Joerg Schambacher <joerg@hifiberry.com>
---
 sound/soc/bcm/hifiberry_dacplus.c | 53 +++++++++++++++++--------------
 1 file changed, 29 insertions(+), 24 deletions(-)

diff --git a/sound/soc/bcm/hifiberry_dacplus.c b/sound/soc/bcm/hifiberry_dacplus.c
index 66a4198a1a30..c94f23313091 100644
--- a/sound/soc/bcm/hifiberry_dacplus.c
+++ b/sound/soc/bcm/hifiberry_dacplus.c
@@ -406,29 +406,34 @@ static int snd_rpi_hifiberry_dacplus_probe(struct platform_device *pdev)
 	if (ret < 0)
 		return ret;
 	if (ret) {
-		card->aux_dev = hifiberry_dacplus_aux_devs;
-		card->num_aux_devs =
-				ARRAY_SIZE(hifiberry_dacplus_aux_devs);
 		tpa_node = of_find_compatible_node(NULL, NULL, "ti,tpa6130a2");
 		tpa_prop = of_find_property(tpa_node, "status", &len);
-
-		if (strcmp((char *)tpa_prop->value, "okay")) {
-			/* and activate headphone using change_sets */
-			dev_info(&pdev->dev, "activating headphone amplifier");
-			of_changeset_init(&ocs);
-			ret = of_changeset_update_property(&ocs, tpa_node,
-							&tpa_enable_prop);
-			if (ret) {
-				dev_err(&pdev->dev,
-				"cannot activate headphone amplifier\n");
-				return -ENODEV;
-			}
-			ret = of_changeset_apply(&ocs);
-			if (ret) {
-				dev_err(&pdev->dev,
-				"cannot activate headphone amplifier\n");
-				return -ENODEV;
+		if (tpa_prop) {
+			card->aux_dev = hifiberry_dacplus_aux_devs;
+			card->num_aux_devs =
+				ARRAY_SIZE(hifiberry_dacplus_aux_devs);
+			if (strcmp((char *)tpa_prop->value, "okay")) {
+				/* and activate headphone using change_sets */
+				dev_info(&pdev->dev,
+					"activating headphone amplifier\n");
+				of_changeset_init(&ocs);
+				ret = of_changeset_update_property(&ocs,
+					tpa_node, &tpa_enable_prop);
+				if (ret) {
+					dev_err(&pdev->dev,
+					"cannot activate headphone amplifier\n");
+					return -ENODEV;
+				}
+				ret = of_changeset_apply(&ocs);
+				if (ret) {
+					dev_err(&pdev->dev,
+					"cannot activate headphone amplifier\n");
+					return -ENODEV;
+				}
 			}
+		} else {
+			dev_warn(&pdev->dev,
+			"I2C-device (at 0x60) detected! Wrong overlay?\n");
 		}
 	}
 
@@ -464,7 +469,7 @@ static int snd_rpi_hifiberry_dacplus_probe(struct platform_device *pdev)
 		snd_mute_gpio =	devm_gpiod_get_optional(&pdev->dev,
 						 "mute", GPIOD_OUT_HIGH);
 		if (IS_ERR(snd_mute_gpio)) {
-			dev_err(&pdev->dev, "Can't allocate GPIO (HW-MUTE)");
+			dev_err(&pdev->dev, "Can't allocate GPIO (HW-MUTE)\n");
 			return PTR_ERR(snd_mute_gpio);
 		}
 
@@ -483,7 +488,7 @@ static int snd_rpi_hifiberry_dacplus_probe(struct platform_device *pdev)
 		snd_reset_gpio = devm_gpiod_get_optional(&pdev->dev,
 						"reset", GPIOD_OUT_HIGH);
 		if (IS_ERR(snd_reset_gpio)) {
-			dev_err(&pdev->dev, "Can't allocate GPIO (HW-RESET)");
+			dev_err(&pdev->dev, "Can't allocate GPIO (HW-RESET)\n");
 			return PTR_ERR(snd_reset_gpio);
 		}
 
@@ -496,10 +501,10 @@ static int snd_rpi_hifiberry_dacplus_probe(struct platform_device *pdev)
 			"snd_soc_register_card() failed: %d\n", ret);
 	if (!ret) {
 		if (snd_mute_gpio)
-			dev_info(&pdev->dev, "GPIO%i for HW-MUTE selected",
+			dev_info(&pdev->dev, "GPIO%i for HW-MUTE selected\n",
 					gpio_chip_hwgpio(snd_mute_gpio));
 		if (snd_reset_gpio)
-			dev_info(&pdev->dev, "GPIO%i for HW-RESET selected",
+			dev_info(&pdev->dev, "GPIO%i for HW-RESET selected\n",
 					gpio_chip_hwgpio(snd_reset_gpio));
 	}
 	return ret;
