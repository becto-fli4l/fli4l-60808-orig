Index: pppd/Makefile.fli4l
===================================================================
RCS file: pppd/Makefile.fli4l
diff -N pppd/Makefile.fli4l
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ pppd/Makefile.fli4l	29 Jul 2004 12:34:54 -0000	1.2
@@ -0,0 +1,234 @@
+#
+# pppd makefile for Linux
+# $Id: Makefile.fli4l,v 1.1 2004/07/29 12:17:29 jw5 Exp $
+#
+
+# Default installation locations
+BINDIR = $(DESTDIR)/usr/sbin
+MANDIR = $(DESTDIR)/usr/man
+INCDIR = $(DESTDIR)/usr/include
+
+TARGETS = pppd
+
+PPPDSRCS = main.c magic.c fsm.c lcp.c ipcp.c upap.c chap-new.c md5.c ccp.c \
+	   ecp.c ipxcp.c auth.c options.c sys-linux.c md4.c chap_ms.c \
+	   demand.c utils.c tty.c eap.c chap-md5.c
+
+HEADERS = ccp.h chap-new.h ecp.h fsm.h ipcp.h \
+	ipxcp.h lcp.h magic.h md5.h patchlevel.h pathnames.h pppd.h \
+	upap.h eap.h
+
+MANPAGES = pppd.8
+PPPDOBJS = main.o magic.o fsm.o lcp.o ipcp.o upap.o chap-new.o md5.o ccp.o \
+	   ecp.o auth.o options.o demand.o utils.o sys-linux.o ipxcp.o tty.o \
+	   eap.o chap-md5.o
+
+#
+# include dependencies if present
+ifeq (.depend,$(wildcard .depend))
+include .depend
+endif
+
+CC = gcc
+COPTS = -Os -pipe -Wall
+LIBS =
+
+# Uncomment the next 2 lines to include support for Microsoft's
+# MS-CHAP authentication protocol.  Also, edit plugins/radius/Makefile.linux.
+CHAPMS=y
+USE_CRYPT=y
+# Don't use MSLANMAN unless you really know what you're doing.
+#MSLANMAN=y
+# Uncomment the next line to include support for MPPE.  CHAPMS (above) must
+# also be enabled.  Also, edit plugins/radius/Makefile.linux.
+#MPPE=y
+
+# Uncomment the next line to include support for PPP packet filtering.
+# This requires that the libpcap library and headers be installed
+# and that the kernel driver support PPP packet filtering.
+#FILTER=y
+
+# Uncomment the next line to include support for PPP packet filtering
+# using precompiled filter expressions.  This requires that the
+# libpcap library and headers be installed and that the kernel driver
+# support PPP packet filtering.  
+PRECOMPILED_FILTER=y
+
+# Uncomment the next line to enable multilink PPP (enabled by default)
+# Linux distributions: Please leave multilink ENABLED in your builds
+# of pppd!
+#HAVE_MULTILINK=y
+
+# Uncomment the next line to enable the TDB database (enabled by default.)
+# If you enable multilink, then TDB is automatically enabled also.
+# Linux distributions: Please leave TDB ENABLED in your builds.
+#USE_TDB=y
+
+HAS_SHADOW=y
+#USE_PAM=y
+#HAVE_INET6=y
+
+# Enable plugins
+PLUGIN=y
+
+# Enable Microsoft proprietary Callback Control Protocol
+#CBCP=y
+
+# Enable EAP SRP-SHA1 authentication (requires libsrp)
+#USE_SRP=y
+
+MAXOCTETS=y
+
+INCLUDE_DIRS= -I../include
+
+COMPILE_FLAGS= -DHAVE_PATHS_H -DIPX_CHANGE -DHAVE_MMAP
+
+CFLAGS= $(COPTS) $(COMPILE_FLAGS) $(INCLUDE_DIRS)
+
+ifdef CHAPMS
+CFLAGS   += -DCHAPMS=1
+NEEDDES=y
+PPPDOBJS += md4.o chap_ms.o
+HEADERS	+= md4.h chap_ms.h
+ifdef MSLANMAN
+CFLAGS   += -DMSLANMAN=1
+endif
+ifdef MPPE
+CFLAGS   += -DMPPE=1
+endif
+endif
+
+# EAP SRP-SHA1
+ifdef USE_SRP
+CFLAGS	+= -DUSE_SRP -DOPENSSL -I/usr/local/ssl/include
+LIBS	+= -lsrp -L/usr/local/ssl/lib -lcrypto
+TARGETS	+= srp-entry
+EXTRAINSTALL = $(INSTALL) -s -c -m 555 srp-entry $(BINDIR)/srp-entry
+MANPAGES += srp-entry.8
+EXTRACLEAN += srp-entry.o
+NEEDDES=y
+else
+# OpenSSL has an integrated version of SHA-1, and its implementation
+# is incompatible with this local SHA-1 implementation.  We must use
+# one or the other, not both.
+PPPDSRCS += sha1.c
+HEADERS += sha1.h
+PPPDOBJS += sha1.o
+endif
+
+ifdef HAS_SHADOW
+CFLAGS   += -DHAS_SHADOW
+#LIBS     += -lshadow $(LIBS)
+endif
+
+ifneq ($(wildcard /usr/include/crypt.h),)
+CFLAGS   += -DHAVE_CRYPT_H=1
+endif
+ifneq ($(wildcard /usr/lib/libcrypt.*),)
+LIBS	+= -lcrypt
+endif
+
+ifdef NEEDDES
+ifndef USE_CRYPT
+LIBS     += -ldes $(LIBS)
+else
+CFLAGS   += -DUSE_CRYPT=1
+endif
+PPPDOBJS += pppcrypt.o
+HEADERS += pppcrypt.h
+endif
+
+# For "Pluggable Authentication Modules", see ftp.redhat.com:/pub/pam/.
+ifdef USE_PAM
+CFLAGS   += -DUSE_PAM
+LIBS     += -lpam -ldl
+endif
+
+# Multi-linnk
+ifdef HAVE_MULTILINK
+	# Multilink implies the use of TDB
+	USE_TDB=y
+
+	CFLAGS += -DHAVE_MULTILINK
+	PPPDSRCS += multilink.c
+	PPPDOBJS += multilink.o
+endif
+
+# TDB
+ifdef USE_TDB
+	CFLAGS += -DUSE_TDB=1
+	PPPDSRCS += tdb.c
+	PPPDOBJS += tdb.o
+	HEADERS += tdb.h
+endif
+
+# Lock library binary for Linux is included in 'linux' subdirectory.
+ifdef LOCKLIB
+LIBS     += -llock
+CFLAGS   += -DLOCKLIB=1
+endif
+
+ifdef PLUGIN
+CFLAGS	+= -DPLUGIN
+LDFLAGS	+= -Wl,-E
+LIBS	+= -ldl
+endif
+
+ifdef FILTER
+LIBS    += -lpcap 
+CFLAGS  += -DPPP_FILTER -I/usr/include/pcap
+endif
+
+ifdef PRECOMPILED_FILTER
+PPPDSRCS += pcap_pcc.c
+HEADERS  += pcap_pcc.h
+PPPDOBJS += pcap_pcc.o
+LIBS    += $(PCAP_DIR)/lib/libpcap.a
+CFLAGS  += -DPPP_PRECOMPILED_FILTER -DPPP_FILTER -I$(PCAP_DIR)/include
+endif
+
+ifdef HAVE_INET6
+     PPPDSRCS += ipv6cp.c eui64.c
+     HEADERS  += ipv6cp.h eui64.h
+     PPPDOBJS += ipv6cp.o eui64.o
+     CFLAGS   += -DINET6=1
+endif
+
+ifdef CBCP
+     PPPDSRCS += cbcp.c
+     PPPDOBJS += cbcp.o
+     CFLAGS += -DCBCP_SUPPORT
+     HEADERS += cbcp.h
+endif
+
+ifdef MAXOCTETS
+     CFLAGS += -DMAXOCTETS
+endif
+
+INSTALL= install -o root
+
+all: $(TARGETS)
+
+install: pppd
+	mkdir -p $(BINDIR) $(MANDIR)
+	$(EXTRAINSTALL)
+	$(INSTALL) -s -c -m 555 pppd $(BINDIR)/pppd
+	if chgrp pppusers $(BINDIR)/pppd 2>/dev/null; then \
+	  chmod o-rx,u+s $(BINDIR)/pppd; fi
+	$(INSTALL) -c -m 444 pppd.8 $(MANDIR)/man8
+
+pppd: $(PPPDOBJS)
+	$(CC) $(CFLAGS) $(LDFLAGS) -o pppd $(PPPDOBJS) $(LIBS)
+
+srp-entry:	srp-entry.c
+	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ srp-entry.c $(LIBS)
+
+install-devel:
+	mkdir -p $(INCDIR)/pppd
+	$(INSTALL) -c -m 644 $(HEADERS) $(INCDIR)/pppd
+
+clean:
+	rm -f $(PPPDOBJS) $(EXTRACLEAN) $(TARGETS) *~ #* core
+
+depend:
+	$(CPP) -M $(CFLAGS) $(PPPDSRCS) >.depend
Index: pppd/chap_ms.c
===================================================================
RCS file: /home/jw5/local/cvs/dsl/pppd/pppd/chap_ms.c,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -r1.1.1.1 -r1.2
--- pppd/chap_ms.c	28 Jul 2004 17:01:26 -0000	1.1.1.1
+++ pppd/chap_ms.c	29 Jul 2004 12:17:29 -0000	1.2
@@ -74,7 +74,7 @@
  *
  */
 
-#define RCSID	"$Id: chap_ms.c,v 1.30 2003/07/10 17:59:33 fcusack Exp $"
+#define RCSID	"$Id: chap_ms.c,v 1.1.1.1 2004/07/28 17:01:26 jw5 Exp $"
 
 #ifdef CHAPMS
 
@@ -121,16 +121,16 @@
 			  	/* Has meaning only with MS-CHAP challenges */
 #endif
 
-#ifdef MPPE
-u_char mppe_send_key[MPPE_MAX_KEY_LEN];
-u_char mppe_recv_key[MPPE_MAX_KEY_LEN];
-int mppe_keys_set = 0;		/* Have the MPPE keys been set? */
-
 /* For MPPE debug */
 /* Use "[]|}{?/><,`!2&&(" (sans quotes) for RFC 3079 MS-CHAPv2 test value */
 static char *mschap_challenge = NULL;
 /* Use "!@\#$%^&*()_+:3|~" (sans quotes, backslash is to escape #) for ... */
 static char *mschap2_peer_challenge = NULL;
+
+#ifdef MPPE
+u_char mppe_send_key[MPPE_MAX_KEY_LEN];
+u_char mppe_recv_key[MPPE_MAX_KEY_LEN];
+int mppe_keys_set = 0;		/* Have the MPPE keys been set? */
 
 #include "fsm.h"		/* Need to poke MPPE options */
 #include "ccp.h"
Index: pppd/options.c
===================================================================
RCS file: /home/jw5/local/cvs/dsl/pppd/pppd/options.c,v
retrieving revision 1.1.1.1
retrieving revision 1.3
diff -u -r1.1.1.1 -r1.3
--- pppd/options.c	28 Jul 2004 17:01:26 -0000	1.1.1.1
+++ pppd/options.c	29 Jul 2004 12:34:54 -0000	1.3
@@ -40,7 +40,7 @@
  * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  */
 
-#define RCSID	"$Id: options.c,v 1.92 2004/01/13 04:02:07 paulus Exp $"
+#define RCSID	"$Id: options.c,v 1.2 2004/07/29 12:17:29 jw5 Exp $"
 
 #include <ctype.h>
 #include <stdio.h>
@@ -148,6 +148,13 @@
 static int loadplugin __P((char **));
 #endif
 
+#ifdef PPP_PRECOMPILED_FILTER
+#include "pcap_pcc.h"
+static int setprecompiledpassfilter __P((char **));
+static int setprecompiledactivefilter __P((char **));
+#undef PPP_FILTER
+#endif
+
 #ifdef PPP_FILTER
 static int setpassfilter __P((char **));
 static int setactivefilter __P((char **));
@@ -296,6 +303,14 @@
       "set filter for active pkts", OPT_PRIO },
 #endif
 
+#ifdef PPP_PRECOMPILED_FILTER
+    { "precompiled-pass-filter", 1, setprecompiledpassfilter,
+      "set precompiled filter for packets to pass", OPT_PRIO },
+
+    { "precompiled-active-filter", 1, setprecompiledactivefilter,
+      "set precompiled filter for active pkts", OPT_PRIO },
+#endif
+
 #ifdef MAXOCTETS
     { "maxoctets", o_int, &maxoctets,
       "Set connection traffic limit",
@@ -1430,6 +1445,29 @@
     free(fname);
     return ok;
 }
+
+#ifdef PPP_PRECOMPILED_FILTER
+/*
+ * setprecompiledpassfilter - Set the pass filter for packets using a
+ * precompiled expression
+ */
+static int
+setprecompiledpassfilter(argv)
+    char **argv;
+{
+    return pcap_pre_compiled (*argv, &pass_filter);
+}
+
+/*
+ * setactivefilter - Set the active filter for packets
+ */
+static int
+setprecompiledactivefilter(argv)
+    char **argv;
+{
+    return pcap_pre_compiled (*argv, &active_filter);
+}
+#endif
 
 #ifdef PPP_FILTER
 /*
Index: pppd/pcap_pcc.c
===================================================================
RCS file: pppd/pcap_pcc.c
diff -N pppd/pcap_pcc.c
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ pppd/pcap_pcc.c	29 Jul 2004 12:17:29 -0000	1.1
@@ -0,0 +1,74 @@
+#include <pcap.h>
+#include <net/bpf.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <errno.h>
+#include "pppd.h"
+
+int pcap_pre_compiled (char * fname, struct bpf_program *p)
+{
+    char buf[128];
+    int line = 0, size = 0, index=0, ret=1;
+    FILE *f = fopen (fname, "r");
+    if (!f)
+    {
+       option_error("error opening precompiled active-filter '%s': %s",
+                    fname, strerror (errno));
+       return 0;
+    }
+    while (fgets (buf, 127, f))
+    {
+       line++;
+       if (*buf == '#')
+           continue;
+       if (size)
+       {
+           /*
+             struct bpf_insn {
+             u_short   code;
+             u_char    jt;
+             u_char    jf;
+             bpf_int32 k;
+             }
+           */
+           struct bpf_insn * insn = & p->bf_insns[index];
+           unsigned code, jt, jf, k;
+           if (sscanf (buf, "%u %u %u %u", &code, &jt, &jf, &k) != 4)
+           {
+               goto err;
+           }
+           insn->code = code;
+           insn->jt = jt;
+           insn->jf = jf;
+           insn->k  = k;
+           index++;
+       }
+       else
+       {
+           if (sscanf (buf, "%u", &size) != 1)
+           {
+               goto err;
+           }
+           p->bf_len = size;
+           p->bf_insns = (struct bpf_insn *) 
+               malloc (size * sizeof (struct bpf_insn));
+       }
+    } 
+    if (size != index)
+    {
+       option_error("error in precompiled active-filter,"
+                    " expected %d expressions, got %dn",
+                    size, index);
+       ret = 0;
+    }
+    fclose(f);
+    return ret;
+
+err:
+  option_error("error in precompiled active-filter"
+              " expression line %s:%d (wrong size)\n", 
+              fname, line);
+  fclose (f);
+  return 0;
+}
Index: pppd/pcap_pcc.h
===================================================================
RCS file: pppd/pcap_pcc.h
diff -N pppd/pcap_pcc.h
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ pppd/pcap_pcc.h	29 Jul 2004 12:17:29 -0000	1.1
@@ -0,0 +1,7 @@
+#ifndef PCAP_PCC_H
+#define PCAP_PCC_H
+
+#include <pcap.h>
+
+int pcap_pre_compiled (char * fname, struct bpf_program *p);
+#endif /* PCAP_PCC_H */
Index: pppd/plugins/rp-pppoe/Makefile.fli4l
===================================================================
RCS file: pppd/plugins/rp-pppoe/Makefile.fli4l
diff -N pppd/plugins/rp-pppoe/Makefile.fli4l
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ pppd/plugins/rp-pppoe/Makefile.fli4l	29 Jul 2004 12:36:30 -0000
@@ -0,0 +1,50 @@
+# Generated automatically from Makefile.in by configure.
+#***********************************************************************
+#
+# Makefile
+#
+# Makefile for Roaring Penguin's Linux PPPoE plugin.
+#
+# Copyright (C) 2001 Roaring Penguin Software Inc.
+#
+# This program may be distributed according to the terms of the GNU
+# General Public License, version 2 or (at your option) any later version.
+#
+# $Id: Makefile.linux,v 1.1.1.1 2004/07/28 17:01:26 jw5 Exp $
+#***********************************************************************
+
+# Version is set ONLY IN THE MAKEFILE!  Don't delete this!
+VERSION=3.3
+
+COPTS=-Os -Wall
+CFLAGS=$(COPTS) -I../../../include/linux
+all: rp-pppoe.so
+
+rp-pppoe.so: libplugin.a plugin.o
+	gcc -o rp-pppoe.so -shared plugin.o libplugin.a
+
+install: all
+	$(INSTALL) -d -m 755 $(LIBDIR)
+	$(INSTALL) -s -c -m 4550 rp-pppoe.so $(LIBDIR)
+
+clean:
+	rm -f *.o *.so
+
+plugin.o: plugin.c
+	gcc '-DRP_VERSION="$(VERSION)"' $(CFLAGS) -I../../..  -c -o plugin.o -fPIC plugin.c
+
+libplugin.a: discovery.o if.o common.o debug.o
+	ar -rc $@ $^
+
+discovery.o: discovery.c
+	gcc $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o discovery.o -fPIC discovery.c
+
+if.o: if.c
+	gcc $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o if.o -fPIC if.c
+
+debug.o: debug.c
+	gcc $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o debug.o -fPIC debug.c
+
+common.o: common.c
+	gcc $(CFLAGS) '-DVERSION="$(VERSION)"' -c -o common.o -fPIC common.c
+
