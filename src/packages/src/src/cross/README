This directory contains scripts that build various cross compiler toolchains.
These are used for pre-building the binaries of mkfli4l and related tools
found in the `base' package for the convenience of users that do not have a
native compiler installed on their systems (this is especially valid for users
running Microsoft Windows).

The following cross compiling toolchains can be built. Toolchains built by
crosstool-NG are marked with [CT-NG].

- i686-pc-mingw32 for building 32-bit MS Windows binaries
  (use build-i686-mingw32.sh) [CT-NG]
- i686-pc-linux for building 32-bit Linux binaries
  (use build-i686-linux.sh) [CT-NG]
- x86_64-pc-linux for building 64-bit Linux binaries
  (use build-x86_64-linux.sh) [CT-NG]
- x86_64-apple-darwin9 for building 64-bit OS X binaries
  (use build-x86_64-darwin.sh)

You will need `gperf' to be available on your build host for all crosstool-NG
based toolchains.

Additional notes on the Darwin toolchain
----------------------------------------
For the Darwin (Mac OS X) cross-compiler, you have to manually download
and extract the OS X SDK, version 10.8. As this SDK is not redistributable,
it is not possible for us to provide a convenient archive of it :-(((. Please
put an archive named MacOSX10.8.sdk.tar.bz2 containing the MacOSX10.8.sdk/
subdirectory into ${HOME}/.fli4l-cross/dl in order to build the toolchain.

Additionally, on a 64-bit host you will have to install some 32-bit libraries
in order to build odcctools which is part of the toolchain. This includes
32-bit versions of:
- libgcc
- libc / libdl
- libstdc++
- libuuid
- libssl

On a Ubuntu system, this means to install the following packages:
- gcc-multilib
- g++-multilib
- libuuid1:i386
- libssl1.0.0:i386

Furthermore, you will have to manually create symlinks in /lib/i386-linux-gnu
in order to make the libraries be found by the linker (installing uuid-dev:i386
or similar did not work, at least not for me):

# cd /lib/i386-linux-gnu
# ln -s libuuid.so.1 libuuid.so
# ln -s libssl.so.1.0.0 libssl.so
# ln -s libcrypto.so.1.0.0 libcrypto.so
