##-----------------------------------------------------------------------------
## fli4l __FLI4LVER__ - configuration for package "ppp"
##
##  P L E A S E  R E A D  T H E  D O C U M E N T A T I O N !
##
##  B I T T E  U N B E D I N G T  D I E  D O K U M E N T A T I O N  L E S E N !
##
##-----------------------------------------------------------------------------
## Creation:     26.06.2001  fm
## Last Update:  $Id$
##
## Copyright (c) 2001-2016 - Frank Meyer, fli4l-Team <team@fli4l.de>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##-----------------------------------------------------------------------------

#------------------------------------------------------------------------------
# optional package: pppd
#------------------------------------------------------------------------------
#OPT_PPP='no'                   # enable usage of PPP circuits needed by
                                # various circuit types (e.g. pppoe,
                                # fritzdsl, pptp, umts, ...)
#OPT_PPP_MULTILINK='no'         # enable support for Multilink PPP
                                # (needs OPT_BUNDLE='yes'!)

#------------------------------------------------------------------------------
# optional package: ppp-peers
#------------------------------------------------------------------------------
#OPT_PPP_PEERS='no'             # activate to authenticate remote peers
                                # which access your fli4l through PPP
PPP_PEER_N='0'                  # number of peers to authenticate
PPP_PEER_1_USERID='remoteuser'  # user name to authenticate
PPP_PEER_1_PASSWORD='secret'    # password to check against
#PPP_PEER_1_REMOTEIPS='10.1.0.0/16'
                                # optional, contains IPv4 addresses or
                                # networks the peer must use for
                                # authentication to succeed; if left empty
                                # or undefined, no address checks are done
#PPP_PEER_1_CIRCUITS='pppoe-server'
                                # optional, contains names of circuits
                                # which may use this authentication entry;
                                # if left empty or undefined, all PPP
                                # circuits are allowed to use that entry

#------------------------------------------------------------------------------
# optional package: PPP circuits "serial" and "serial-server"
#------------------------------------------------------------------------------
#OPT_PPP_SERIAL='no'            # install PPP serial client
#OPT_PPP_SERIAL_SERVER='no'     # install PPP serial server

#
# put these into circuits.txt
#

#CIRC_1_NAME='ppp-client'       # circuit name, don't use spaces
#CIRC_1_TYPE='ppp'              # this is a PPP circuit...
#CIRC_1_PPP_TYPE='serial'       # ...routed over a serial line (client)
#CIRC_1_PPP_SERIAL_DEV='com2'   # COM port (com1-com4 or ttyS0-ttyS3)
#CIRC_1_PPP_SERIAL_SPEED='38400'
                                # COM port speed
#CIRC_1_CHARGEINT='60'          # value of charge interval (in seconds)
#CIRC_1_ENABLED='yes'           # the circuit is enabled
#CIRC_1_UP='yes'                # activate at boot time (OPT_IMOND='no')
#CIRC_1_TIMES='Mo-Su:00-24:0.0:Y'
                                # times/charges when LCR (OPT_IMOND='yes')
#CIRC_1_DEBUG='yes'             # enable debugging, 'yes' or 'no'
#CIRC_1_NETS_IPV4_N='1'         # network(s) to route over this link
#CIRC_1_NETS_IPV4_1='192.168.5.0/24'
#CIRC_1_USEPEERDNS='yes'        # use dns server of your peer: yes or no
#CIRC_1_HUP_TIMEOUT='60'        # idle time after which to hangup
                                # (zero means no idle timeout); a non-zero
                                # value makes this circuit a dial-on-demand
                                # circuit such that a connection to the
                                # peer is only established if data is
                                # actually passed through the PPP interface
#CIRC_1_PPP_PEER_AUTH='yes'     # force peer to authenticate himself
#CIRC_1_PPP_USERID='client'     # use if the peer wants us to
                                # successfully authenticate ourselves
#CIRC_1_PPP_PASSWORD='clientpass'
                                # see above
#CIRC_1_PPP_LOCALIP='192.168.4.2'
                                # sets the local IP address
#CIRC_1_PPP_REMOTEIP='192.168.4.1'
                                # sets the remote IP address
#CIRC_1_PPP_FILTER='yes'        # filter traffic to be able to hangup
                                # even if someone is trying to scan us
#CIRC_1_PPP_FILTER_EXPR=''      # the filter to use; leave empty to use
                                # the default filter
#CIRC_1_PPP_VJ='yes'            # try Van Jacobson TCPv4 header compression

#CIRC_2_NAME='ppp-server'       # circuit name, don't use spaces
#CIRC_2_TYPE='ppp'              # this is a PPP circuit...
#CIRC_2_PPP_TYPE='serial-server'
                                # ...routed over a serial line (server)
#CIRC_2_PPP_SERIAL_SERVER_DEV='com2'
                                # COM port (com1-com4 or ttyS0-ttyS3)
#CIRC_2_PPP_SERIAL_SERVER_SPEED='38400'
                                # COM port speed
#CIRC_2_CHARGEINT='60'          # value of charge interval (in seconds)
#CIRC_2_ENABLED='yes'           # the circuit is enabled
#CIRC_2_UP='yes'                # activate at boot time (OPT_IMOND='no')
#CIRC_2_TIMES='Mo-Su:00-24:0.0:Y'
                                # times/charges when LCR (OPT_IMOND='yes')
#CIRC_2_DEBUG='yes'             # enable debugging, 'yes' or 'no'
#CIRC_2_NETS_IPV4_N='1'         # network(s) to route over this link
#CIRC_2_NETS_IPV4_1='192.168.3.0/24'
#CIRC_2_PPP_PEER_AUTH='yes'     # force peer to authenticate himself
#CIRC_2_PPP_USERID='server'     # use if the peer wants us to
                                # successfully authenticate ourselves
#CIRC_2_PPP_PASSWORD='serverpass'
                                # see above
#CIRC_2_PPP_LOCALIP='192.168.4.1'
                                # sets the local IP address
#CIRC_2_PPP_REMOTEIP='192.168.4.2'
                                # sets the remote IP address
#CIRC_2_PPP_VJ='yes'            # try Van Jacobson TCPv4 header compression
