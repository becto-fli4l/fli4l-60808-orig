<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0"
   xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
   xmlns:xs="http://www.w3.org/2001/XMLSchema" >

   <xsl:output  method="text" indent="no" encoding="ISO-8859-1" xml:space="default"/>

   <!-- apostroph -->
   <xsl:variable name="apos" select='"&apos;"'/>
   <!-- line end  -->
   <xsl:variable name="CR" select="'&#xa;'"/>
   <!-- continue on next line -->
   <xsl:variable name="CONT" select="concat(' \',$CR)"/>
   <!-- indentation -->
   <xsl:variable name="TAB" select="('    ')"/>
   
   <!--  -->
   <xsl:template match="/">
      <xsl:value-of select="concat('# $', 'Id', '$', $CR)"/>
      <xsl:value-of select="concat('# Do not edit! This file is automaticly generated by rrd-graph.xsl',$CR,$CR)"/>
      <xsl:for-each select="rrd-graph">
         <xsl:call-template name="rrd-graph"/>
      </xsl:for-each>
      <xsl:value-of select="concat('# _oOo_',$CR)"/>
   </xsl:template>
   <!--  -->
   <xsl:template name="rrd-graph">
      <xsl:for-each select="graph">
         <xsl:call-template name="graph"/>
      </xsl:for-each>
   </xsl:template>
   <!--  -->
   <xsl:template name="graph">
      <xsl:value-of select="concat(//header/@name,'_',@name,'_graph ()',$CR)"/>
      <xsl:value-of select="concat('{',$CR)"/>
      <xsl:value-of select="concat($TAB,'last_x=&quot;$1&quot;',$CR)"/>
      <xsl:apply-templates select="group"/>
      <xsl:value-of select="concat($TAB,'else',$CR)"/>
      <xsl:value-of select="concat($TAB,$TAB,'show_error &quot;$_MN_err&quot;')"/>
      <xsl:value-of select="concat(' &quot;no rrd-database for ',//header/@title,' ',@title,'&quot;',$CR)"/>
      <xsl:value-of select="concat($TAB,'fi',$CR)"/>
      <xsl:value-of select="concat('}',$CR,$CR)"/>
   </xsl:template>

   <!-- called with group -->
   <xsl:template match="group">
      <xsl:choose>
         <xsl:when test="position() = 1">
            <xsl:value-of select="concat($TAB,'if [ ')"/>
            <xsl:for-each select="var">
               <xsl:call-template name="test_rrd">
                  <xsl:with-param name="indent" select="concat($TAB,$TAB,' ')"/>
               </xsl:call-template>
            </xsl:for-each>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="concat($TAB,'elif [ ')"/>
            <xsl:for-each select="var">
               <xsl:call-template name="test_rrd">
                  <xsl:with-param name="indent" select="concat($TAB,$TAB,'   ')"/>
               </xsl:call-template>
            </xsl:for-each>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="concat(' ]',$CR)"/>
      <xsl:value-of select="concat($TAB,'then',$CR)"/>
      <xsl:call-template name="rrdtool"/>
      
   </xsl:template>
   <!-- called with group -->
   <xsl:template name="rrdtool">
      <xsl:call-template name="label"/>
      <!-- rrd_graph -->
      <xsl:value-of select="concat($TAB,$TAB,'/usr/bin/rrdtool graph /srv/www/img/rrd/')"/>
      <xsl:value-of select="concat(//header/@name,'-',../@name,'-$last_x.png --title ')"/>
      <xsl:value-of select="concat('&quot;',//header/@title,' ',../@title,' - $last_x&quot;',$CONT)"/>
      <xsl:value-of select="concat($TAB,$TAB,$TAB,'--imginfo ',$apos)"/>
      <xsl:value-of select="'&lt;IMG SRC=&quot;/img/rrd/%s&quot;'"/>
      <xsl:value-of select="' WIDTH=&quot;%lu&quot; HEIGHT=&quot;%lu&quot;'"/>
      <xsl:value-of select="concat(' ALT=&quot;',//header/@title,' ',../@title,'&quot;&gt;')"/>
      <xsl:value-of select="concat($apos,$CONT)"/>
      <xsl:value-of select="concat($TAB,$TAB,$TAB,'$rrd_width $rrd_height $rrd_common_opts')"/>
      <xsl:value-of select="concat(' --watermark &quot;$rrd_watermark&quot;',$CONT)"/>
      <xsl:value-of select="concat($TAB,$TAB,$TAB,'--end now --start end-${last_x}',$CONT)"/>
      <xsl:value-of select="concat($TAB,$TAB,$TAB,'--vertical-label &quot;',../@label,'&quot;',$CONT)"/>
      <xsl:if test="../rrd/@exponent">
         <xsl:value-of select="concat($TAB,$TAB,$TAB,'--units-exponent ',../rrd/@exponent,$CONT)"/>
      </xsl:if>
      <xsl:value-of select="concat($TAB,$TAB,$TAB,'--font &quot;WATERMARK:8&quot;',$CONT)"/>
      <xsl:value-of select="concat($TAB,$TAB,$TAB,'$rrd_grid_background',$CONT)"/>
      <xsl:for-each select="var">
         <xsl:call-template name="DEF"/>
      </xsl:for-each>
      <xsl:for-each select="var">
         <xsl:call-template name="CDEF"/>
      </xsl:for-each>
      <xsl:for-each select="var">
         <xsl:call-template name="VDEF"/>
      </xsl:for-each>
      <xsl:call-template name="HEAD"/>
      <xsl:for-each select="var">
         <xsl:call-template name="LINE"/>
      </xsl:for-each>
      <xsl:for-each select="var">
         <xsl:call-template name="AREA-LINE"/>
      </xsl:for-each>
      <xsl:call-template name="TAIL"/>
   </xsl:template>

   <!-- called with var -->
   <xsl:template name="test_rrd">
      <xsl:param name="indent"/>
      <xsl:if test="position() &gt; 1">
         <xsl:value-of select="concat(' -a',$CONT,$indent)"/>
      </xsl:if>
      <xsl:choose>
         <xsl:when test="rrd/@db">
            <xsl:value-of select="concat('-f $rrd_dbpath/',rrd/@db,'/',@rrd,'.rrd')"/>
         </xsl:when>
         <xsl:when test="../../rrd/@db">
            <xsl:value-of select="concat('-f $rrd_dbpath/',../../rrd/@db,'/',@rrd,'.rrd')"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="concat('-f $rrd_dbpath/',//rrd/@db,'/',@rrd,'.rrd')"/>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <!-- called with group -->
   <xsl:template name="label">
      <xsl:if test="(string(../@minmax)='')or(string(../@minmax)='true')">
         <xsl:value-of select="concat($TAB,$TAB,'max_label=$(printf &quot;%-11.11s&quot; &quot;${_MN_rrd_max}&quot;)',$CR)"/>
         <xsl:value-of select="concat($TAB,$TAB,'avg_label=$(printf &quot;%-11.11s&quot; &quot;${_MN_rrd_avg}&quot;)',$CR)"/>
         <xsl:value-of select="concat($TAB,$TAB,'min_label=$(printf &quot;%-11.11s&quot; &quot;${_MN_rrd_min}&quot;)',$CR)"/>
      </xsl:if>
      <xsl:value-of select="concat($TAB,$TAB,'last_label=$(printf &quot;%-11.11s&quot; &quot;${_MN_rrd_last}&quot;)',$CR)"/>
      <xsl:value-of select="concat($TAB,$TAB,'update_label=$(printf &quot;%-15.15s&quot; &quot;${_MN_rrd_update}&quot;)',$CR)"/>
      <xsl:for-each select="var">
         <xsl:value-of select="concat($TAB,$TAB,'var',position(),'_label=$(printf &quot;%-15.15s&quot; &quot;',@label,'&quot;)',$CR)"/>
      </xsl:for-each>
   </xsl:template>
   <!-- called with var -->
   <xsl:template name="DEF">
      <xsl:variable name="idx">
         <xsl:if test="scale">
            <xsl:value-of select="concat('_',count(scale))"/>
         </xsl:if>
      </xsl:variable>
      <xsl:value-of select="concat($TAB,$TAB,$TAB,'DEF:var',position(),$idx,'=${rrd_dbpath}/')"/>
      <xsl:choose>
         <xsl:when test="rrd/@db">
            <xsl:value-of select="rrd/@db"/>
         </xsl:when>
         <xsl:when test="../../rrd/@db">
            <xsl:value-of select="../../rrd/@db"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="//rrd/@db"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="concat('/',@rrd,'.rrd:')"/>
      <xsl:choose>
         <xsl:when test="@val">
            <xsl:value-of select="@val"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="'value'"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="concat(':AVERAGE',$CONT)"/>
   </xsl:template>
   <!-- called with var -->
   <xsl:template name="CDEF">
      <xsl:variable name="pos" select="position()"/>
      <xsl:if test="scale">
         <xsl:variable name="count" select="count(scale)"/>
         <xsl:for-each select="scale">
            <xsl:variable name="idx">
               <xsl:if test="position() != $count">
                  <xsl:value-of select="concat('_',$count - position())"/>
               </xsl:if>
            </xsl:variable>
            <xsl:value-of select="concat($TAB,$TAB,$TAB,'CDEF:var',$pos,$idx,'=var',$pos,'_',1 + $count - position(),',',@val,',',@op,$CONT)"/>
         </xsl:for-each>
      </xsl:if>
      <xsl:if test="disp-scale">
         <xsl:variable name="count" select="count(disp-scale)"/>
         <xsl:for-each select="disp-scale">
            <xsl:variable name="idx">
               <xsl:value-of select="'_d'"></xsl:value-of>
               <xsl:if test="position() != $count">
                  <xsl:value-of select="$count - position()"/>
               </xsl:if>
            </xsl:variable>
            <xsl:choose>
               <xsl:when test="position() = 1">
                  <xsl:value-of select="concat($TAB,$TAB,$TAB,'CDEF:var',$pos,$idx,'=var',$pos,',',@val,',',@op,$CONT)"/>
               </xsl:when>
               <xsl:otherwise>
                  <xsl:value-of select="concat($TAB,$TAB,$TAB,'CDEF:var',$pos,$idx,'=var',$pos,'_d',1 + $count - position(),',',@val,',',@op,$CONT)"/>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:for-each>
      </xsl:if>
   </xsl:template>
   <!-- called with var -->
   <xsl:template name="VDEF">
      <xsl:if test="(string(../../@minmax)='')or(string(../../@minmax)='true')">
         <xsl:value-of select="concat($TAB,$TAB,$TAB,'VDEF:var',position(),'_max=var',position(),',MAXIMUM',$CONT)"/>
         <xsl:value-of select="concat($TAB,$TAB,$TAB,'VDEF:var',position(),'_avg=var',position(),',AVERAGE',$CONT)"/>
         <xsl:value-of select="concat($TAB,$TAB,$TAB,'VDEF:var',position(),'_min=var',position(),',MINIMUM',$CONT)"/>
      </xsl:if>
      <xsl:value-of select="concat($TAB,$TAB,$TAB,'VDEF:var',position(),'_last=var',position(),',LAST',$CONT)"/>
   </xsl:template>
   <!-- called with group -->
   <xsl:template name="HEAD">
      <xsl:value-of select="concat($TAB,$TAB,$TAB,'COMMENT:&quot;\t\t\t\g&quot;',$CONT)"/>
      <xsl:if test="(string(../@minmax)='')or(string(../@minmax)='true')">
         <xsl:value-of select="concat($TAB,$TAB,$TAB,'COMMENT:&quot;${max_label}\t\g&quot;',$CONT)"/>
         <xsl:value-of select="concat($TAB,$TAB,$TAB,'COMMENT:&quot;${avg_label}\t\g&quot;',$CONT)"/>
         <xsl:value-of select="concat($TAB,$TAB,$TAB,'COMMENT:&quot;${min_label}\t\g&quot;',$CONT)"/>
      </xsl:if>
      <xsl:value-of select="concat($TAB,$TAB,$TAB,'COMMENT:&quot;${last_label}\l&quot;',$CONT)"/>
   </xsl:template>
   <!-- called with var -->
   <xsl:template name="LINE">
      <xsl:variable name="disp">
         <xsl:if test="disp-scale">
            <xsl:value-of select="'_d'"/>
         </xsl:if>
      </xsl:variable>
      <xsl:variable name="dashes">
         <xsl:if test="not(string(@dashes)='')">
            <xsl:value-of select="concat(':dashes=',@dashes)"/>
         </xsl:if>
      </xsl:variable>
      <xsl:variable name="stack">
         <xsl:if test="position()&gt;1">
            <xsl:value-of select="':STACK'"/>
         </xsl:if>
      </xsl:variable>
      <xsl:choose>
         <xsl:when test="(string(../../@area)='true')and(string(../../@stack)='true')">
            <xsl:value-of select="concat($TAB,$TAB,$TAB,'AREA:var',position(),$disp,@color,':&quot;${var',position(),'_label}\t\g&quot;',$stack,$CONT)"/>
         </xsl:when>
         <xsl:when test="string(../../@area)='true'">
            <xsl:value-of select="concat($TAB,$TAB,$TAB,'AREA:var',position(),$disp,@color,':&quot;${var',position(),'_label}\t\g&quot;',$CONT)"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:value-of select="concat($TAB,$TAB,$TAB,'LINE1:var',position(),$disp,@color,':&quot;${var',position(),'_label}\t\g&quot;',$dashes,$CONT)"/>
         </xsl:otherwise>
      </xsl:choose>
      <xsl:if test="(string(../../@minmax)='')or(string(../../@minmax)='true')">
         <xsl:value-of select="concat($TAB,$TAB,$TAB,'GPRINT:var',position(),'_max:&quot;',@format,'\t\t\g&quot;',$CONT)"/>
         <xsl:value-of select="concat($TAB,$TAB,$TAB,'GPRINT:var',position(),'_avg:&quot;',@format,'\t\t\g&quot;',$CONT)"/>
         <xsl:value-of select="concat($TAB,$TAB,$TAB,'GPRINT:var',position(),'_min:&quot;',@format,'\t\t\g&quot;',$CONT)"/>
      </xsl:if>
      <xsl:value-of select="concat($TAB,$TAB,$TAB,'GPRINT:var',position(),'_last:&quot;',@format,'\l&quot;',$CONT)"/>
   </xsl:template>
   <!-- called with var -->
   <xsl:template name="AREA-LINE">
      <xsl:if test="(string(../../@area)='true')and (string(../../@stack)!='true')">
         <xsl:variable name="disp">
            <xsl:if test="disp-scale">
               <xsl:value-of select="'_d'"/>
            </xsl:if>
         </xsl:variable>
         <xsl:variable name="dashes">
            <xsl:if test="not(string(@dashes)='')">
               <xsl:value-of select="concat(':dashes=',@dashes)"/>
            </xsl:if>
         </xsl:variable>
         <xsl:value-of select="concat($TAB,$TAB,$TAB,'LINE1:var',position(),$disp,@color,$dashes,$CONT)"/>
      </xsl:if>
   </xsl:template>
   <!-- called with graph -->
   <xsl:template name="TAIL">
      <xsl:value-of select="concat($TAB,$TAB,$TAB,'COMMENT:&quot;\n&quot;',$CONT)"/>
      <xsl:value-of select="concat($TAB,$TAB,$TAB,'COMMENT:&quot;${update_label}\t${rrd_last_update}&quot;',$CR)"/>
   </xsl:template>
</xsl:stylesheet>

